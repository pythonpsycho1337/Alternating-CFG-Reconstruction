
switch:     file format elf32-i386


Disassembly of section .init:

00000358 <_init>:
 358:	53                   	push   ebx
 359:	83 ec 08             	sub    esp,0x8
 35c:	e8 8f 00 00 00       	call   3f0 <__x86.get_pc_thunk.bx>
 361:	81 c3 7b 1c 00 00    	add    ebx,0x1c7b
 367:	8b 83 18 00 00 00    	mov    eax,DWORD PTR [ebx+0x18]
 36d:	85 c0                	test   eax,eax
 36f:	74 05                	je     376 <_init+0x1e>
 371:	e8 32 00 00 00       	call   3a8 <__gmon_start__@plt>
 376:	83 c4 08             	add    esp,0x8
 379:	5b                   	pop    ebx
 37a:	c3                   	ret    

Disassembly of section .plt:

00000380 <.plt>:
 380:	ff b3 04 00 00 00    	push   DWORD PTR [ebx+0x4]
 386:	ff a3 08 00 00 00    	jmp    DWORD PTR [ebx+0x8]
 38c:	00 00                	add    BYTE PTR [eax],al
	...

00000390 <__libc_start_main@plt>:
 390:	ff a3 0c 00 00 00    	jmp    DWORD PTR [ebx+0xc]
 396:	68 00 00 00 00       	push   0x0
 39b:	e9 e0 ff ff ff       	jmp    380 <.plt>

Disassembly of section .plt.got:

000003a0 <__cxa_finalize@plt>:
 3a0:	ff a3 14 00 00 00    	jmp    DWORD PTR [ebx+0x14]
 3a6:	66 90                	xchg   ax,ax

000003a8 <__gmon_start__@plt>:
 3a8:	ff a3 18 00 00 00    	jmp    DWORD PTR [ebx+0x18]
 3ae:	66 90                	xchg   ax,ax

Disassembly of section .text:

000003b0 <_start>:
 3b0:	31 ed                	xor    ebp,ebp
 3b2:	5e                   	pop    esi
 3b3:	89 e1                	mov    ecx,esp
 3b5:	83 e4 f0             	and    esp,0xfffffff0
 3b8:	50                   	push   eax
 3b9:	54                   	push   esp
 3ba:	52                   	push   edx
 3bb:	e8 22 00 00 00       	call   3e2 <_start+0x32>
 3c0:	81 c3 1c 1c 00 00    	add    ebx,0x1c1c
 3c6:	8d 83 f4 e5 ff ff    	lea    eax,[ebx-0x1a0c]
 3cc:	50                   	push   eax
 3cd:	8d 83 94 e5 ff ff    	lea    eax,[ebx-0x1a6c]
 3d3:	50                   	push   eax
 3d4:	51                   	push   ecx
 3d5:	56                   	push   esi
 3d6:	ff b3 1c 00 00 00    	push   DWORD PTR [ebx+0x1c]
 3dc:	e8 af ff ff ff       	call   390 <__libc_start_main@plt>
 3e1:	f4                   	hlt    
 3e2:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 3e5:	c3                   	ret    
 3e6:	66 90                	xchg   ax,ax
 3e8:	66 90                	xchg   ax,ax
 3ea:	66 90                	xchg   ax,ax
 3ec:	66 90                	xchg   ax,ax
 3ee:	66 90                	xchg   ax,ax

000003f0 <__x86.get_pc_thunk.bx>:
 3f0:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 3f3:	c3                   	ret    
 3f4:	66 90                	xchg   ax,ax
 3f6:	66 90                	xchg   ax,ax
 3f8:	66 90                	xchg   ax,ax
 3fa:	66 90                	xchg   ax,ax
 3fc:	66 90                	xchg   ax,ax
 3fe:	66 90                	xchg   ax,ax

00000400 <deregister_tm_clones>:
 400:	e8 e4 00 00 00       	call   4e9 <__x86.get_pc_thunk.dx>
 405:	81 c2 d7 1b 00 00    	add    edx,0x1bd7
 40b:	8d 8a 2c 00 00 00    	lea    ecx,[edx+0x2c]
 411:	8d 82 2c 00 00 00    	lea    eax,[edx+0x2c]
 417:	39 c8                	cmp    eax,ecx
 419:	74 1d                	je     438 <deregister_tm_clones+0x38>
 41b:	8b 82 10 00 00 00    	mov    eax,DWORD PTR [edx+0x10]
 421:	85 c0                	test   eax,eax
 423:	74 13                	je     438 <deregister_tm_clones+0x38>
 425:	55                   	push   ebp
 426:	89 e5                	mov    ebp,esp
 428:	83 ec 14             	sub    esp,0x14
 42b:	51                   	push   ecx
 42c:	ff d0                	call   eax
 42e:	83 c4 10             	add    esp,0x10
 431:	c9                   	leave  
 432:	c3                   	ret    
 433:	90                   	nop
 434:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 438:	f3 c3                	repz ret 
 43a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

00000440 <register_tm_clones>:
 440:	e8 a4 00 00 00       	call   4e9 <__x86.get_pc_thunk.dx>
 445:	81 c2 97 1b 00 00    	add    edx,0x1b97
 44b:	55                   	push   ebp
 44c:	8d 8a 2c 00 00 00    	lea    ecx,[edx+0x2c]
 452:	8d 82 2c 00 00 00    	lea    eax,[edx+0x2c]
 458:	29 c8                	sub    eax,ecx
 45a:	89 e5                	mov    ebp,esp
 45c:	53                   	push   ebx
 45d:	c1 f8 02             	sar    eax,0x2
 460:	89 c3                	mov    ebx,eax
 462:	83 ec 04             	sub    esp,0x4
 465:	c1 eb 1f             	shr    ebx,0x1f
 468:	01 d8                	add    eax,ebx
 46a:	d1 f8                	sar    eax,1
 46c:	74 14                	je     482 <register_tm_clones+0x42>
 46e:	8b 92 20 00 00 00    	mov    edx,DWORD PTR [edx+0x20]
 474:	85 d2                	test   edx,edx
 476:	74 0a                	je     482 <register_tm_clones+0x42>
 478:	83 ec 08             	sub    esp,0x8
 47b:	50                   	push   eax
 47c:	51                   	push   ecx
 47d:	ff d2                	call   edx
 47f:	83 c4 10             	add    esp,0x10
 482:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
 485:	c9                   	leave  
 486:	c3                   	ret    
 487:	89 f6                	mov    esi,esi
 489:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00000490 <__do_global_dtors_aux>:
 490:	55                   	push   ebp
 491:	89 e5                	mov    ebp,esp
 493:	53                   	push   ebx
 494:	e8 57 ff ff ff       	call   3f0 <__x86.get_pc_thunk.bx>
 499:	81 c3 43 1b 00 00    	add    ebx,0x1b43
 49f:	83 ec 04             	sub    esp,0x4
 4a2:	80 bb 2c 00 00 00 00 	cmp    BYTE PTR [ebx+0x2c],0x0
 4a9:	75 27                	jne    4d2 <__do_global_dtors_aux+0x42>
 4ab:	8b 83 14 00 00 00    	mov    eax,DWORD PTR [ebx+0x14]
 4b1:	85 c0                	test   eax,eax
 4b3:	74 11                	je     4c6 <__do_global_dtors_aux+0x36>
 4b5:	83 ec 0c             	sub    esp,0xc
 4b8:	ff b3 28 00 00 00    	push   DWORD PTR [ebx+0x28]
 4be:	e8 dd fe ff ff       	call   3a0 <__cxa_finalize@plt>
 4c3:	83 c4 10             	add    esp,0x10
 4c6:	e8 35 ff ff ff       	call   400 <deregister_tm_clones>
 4cb:	c6 83 2c 00 00 00 01 	mov    BYTE PTR [ebx+0x2c],0x1
 4d2:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
 4d5:	c9                   	leave  
 4d6:	c3                   	ret    
 4d7:	89 f6                	mov    esi,esi
 4d9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000004e0 <frame_dummy>:
 4e0:	55                   	push   ebp
 4e1:	89 e5                	mov    ebp,esp
 4e3:	5d                   	pop    ebp
 4e4:	e9 57 ff ff ff       	jmp    440 <register_tm_clones>

000004e9 <__x86.get_pc_thunk.dx>:
 4e9:	8b 14 24             	mov    edx,DWORD PTR [esp]
 4ec:	c3                   	ret    

000004ed <calculate>:
 4ed:	55                   	push   ebp
 4ee:	89 e5                	mov    ebp,esp
 4f0:	e8 6b 00 00 00       	call   560 <__x86.get_pc_thunk.ax>
 4f5:	05 e7 1a 00 00       	add    eax,0x1ae7
 4fa:	83 7d 08 05          	cmp    DWORD PTR [ebp+0x8],0x5
 4fe:	77 3b                	ja     53b <.L9+0x7>
 500:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
 503:	c1 e2 02             	shl    edx,0x2
 506:	8b 94 02 14 e6 ff ff 	mov    edx,DWORD PTR [edx+eax*1-0x19ec]
 50d:	01 d0                	add    eax,edx
 50f:	ff e0                	jmp    eax

00000511 <.L3>:
 511:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 514:	0f af 45 0c          	imul   eax,DWORD PTR [ebp+0xc]
 518:	89 45 0c             	mov    DWORD PTR [ebp+0xc],eax
 51b:	eb 1e                	jmp    53b <.L9+0x7>

0000051d <.L5>:
 51d:	f7 5d 0c             	neg    DWORD PTR [ebp+0xc]
 520:	eb 19                	jmp    53b <.L9+0x7>

00000522 <.L6>:
 522:	83 6d 0c 80          	sub    DWORD PTR [ebp+0xc],0xffffff80
 526:	eb 13                	jmp    53b <.L9+0x7>

00000528 <.L7>:
 528:	83 6d 0c 01          	sub    DWORD PTR [ebp+0xc],0x1
 52c:	eb 0d                	jmp    53b <.L9+0x7>

0000052e <.L8>:
 52e:	83 45 0c 01          	add    DWORD PTR [ebp+0xc],0x1
 532:	eb 07                	jmp    53b <.L9+0x7>

00000534 <.L9>:
 534:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 537:	01 45 0c             	add    DWORD PTR [ebp+0xc],eax
 53a:	90                   	nop
 53b:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 53e:	5d                   	pop    ebp
 53f:	c3                   	ret    

00000540 <main>:
 540:	55                   	push   ebp
 541:	89 e5                	mov    ebp,esp
 543:	e8 18 00 00 00       	call   560 <__x86.get_pc_thunk.ax>
 548:	05 94 1a 00 00       	add    eax,0x1a94
 54d:	6a 02                	push   0x2
 54f:	6a 01                	push   0x1
 551:	e8 97 ff ff ff       	call   4ed <calculate>
 556:	83 c4 08             	add    esp,0x8
 559:	b8 00 00 00 00       	mov    eax,0x0
 55e:	c9                   	leave  
 55f:	c3                   	ret    

00000560 <__x86.get_pc_thunk.ax>:
 560:	8b 04 24             	mov    eax,DWORD PTR [esp]
 563:	c3                   	ret    
 564:	66 90                	xchg   ax,ax
 566:	66 90                	xchg   ax,ax
 568:	66 90                	xchg   ax,ax
 56a:	66 90                	xchg   ax,ax
 56c:	66 90                	xchg   ax,ax
 56e:	66 90                	xchg   ax,ax

00000570 <__libc_csu_init>:
 570:	55                   	push   ebp
 571:	57                   	push   edi
 572:	56                   	push   esi
 573:	53                   	push   ebx
 574:	e8 77 fe ff ff       	call   3f0 <__x86.get_pc_thunk.bx>
 579:	81 c3 63 1a 00 00    	add    ebx,0x1a63
 57f:	83 ec 0c             	sub    esp,0xc
 582:	8b 6c 24 28          	mov    ebp,DWORD PTR [esp+0x28]
 586:	8d b3 04 ff ff ff    	lea    esi,[ebx-0xfc]
 58c:	e8 c7 fd ff ff       	call   358 <_init>
 591:	8d 83 00 ff ff ff    	lea    eax,[ebx-0x100]
 597:	29 c6                	sub    esi,eax
 599:	c1 fe 02             	sar    esi,0x2
 59c:	85 f6                	test   esi,esi
 59e:	74 25                	je     5c5 <__libc_csu_init+0x55>
 5a0:	31 ff                	xor    edi,edi
 5a2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 5a8:	83 ec 04             	sub    esp,0x4
 5ab:	55                   	push   ebp
 5ac:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 5b0:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 5b4:	ff 94 bb 00 ff ff ff 	call   DWORD PTR [ebx+edi*4-0x100]
 5bb:	83 c7 01             	add    edi,0x1
 5be:	83 c4 10             	add    esp,0x10
 5c1:	39 fe                	cmp    esi,edi
 5c3:	75 e3                	jne    5a8 <__libc_csu_init+0x38>
 5c5:	83 c4 0c             	add    esp,0xc
 5c8:	5b                   	pop    ebx
 5c9:	5e                   	pop    esi
 5ca:	5f                   	pop    edi
 5cb:	5d                   	pop    ebp
 5cc:	c3                   	ret    
 5cd:	8d 76 00             	lea    esi,[esi+0x0]

000005d0 <__libc_csu_fini>:
 5d0:	f3 c3                	repz ret 

Disassembly of section .fini:

000005d4 <_fini>:
 5d4:	53                   	push   ebx
 5d5:	83 ec 08             	sub    esp,0x8
 5d8:	e8 13 fe ff ff       	call   3f0 <__x86.get_pc_thunk.bx>
 5dd:	81 c3 ff 19 00 00    	add    ebx,0x19ff
 5e3:	83 c4 08             	add    esp,0x8
 5e6:	5b                   	pop    ebx
 5e7:	c3                   	ret    
